# check friend status
# server should send notification and lock the user_b's invitation button
type Query {
  """
  get all pending requests
  """
  friendPendingList(cursor: String!, limit: Int!): UserLists!
  """
  get all confrimed friends' list
  """
  friendList(cursor: String!, limit: Int!): UserLists!
  """
  get all users who like this postComment, post and travellist
  """
  likeList(id: ID!, type: String!, cursor: String!, limit: Int!): UserLists!
  """
  get all notifications
  """
  notifications(cursor: String!, limit: Int!): Notifications!
}

type Mutation {
  """
  create or update relationship depends on 'PENDING', 'CONFIRMED', 'CANCELED' and 'UNFRIEND' status
  """
  friendActions(user_b: ID, status: String!): Payload!
  """
  like/dislike post, postComment and travelList
  """
  like(id: ID!, authorId: ID!, type: String!): LikesPayload!
}

type Subscription {
  friendNotifications(id: ID): FriendNotification
}

type UserLists {
  status: String!
  message: String
  userLists: [UserList!]!
}

type FriendNotification {
  message: String
  userBid: ID!
  createdAt: String
  userInfo: UserList!
}

type UserList {
  id: ID
  username: String
  headshot: String
  href: String
}

type LikesPayload {
  status: String!
  message: String
  likes: Like
}

type Like implements Node {
  id: ID!
  liked: Boolean!
}

type Notifications {
  status: String!
  message: String
  notifications: [Notification]
}

type Notification implements Node {
  id: ID!
  type: String!
  href: String
  message: String
  createdAt: String!
}
