type Query {
  """
  get all touristSpot
  """
  getTouristSpots(cityId: ID!): TouristSpots
}

type Mutation {
  """
  create or update touristSpot
  """
  postTouristSpot(
    id: ID
    name: String!
    type: String!
    days: Int!
    cost: Int!
    rates: Int!
    transportation: String
    review: String
    cityId: ID!
  ): TouristSpotPayload!
  """
  delete touristSpot
  """
  deleteTouristSpot(id: ID!): Payload
}

type TouristSpotPayload {
  status: String!
  message: String
  touristSpot: TouristSpot!
}

type TouristSpots {
  status: String!
  message: String
  touristSpots: [TouristSpot!]!
}

type TouristSpot implements Node {
  id: ID!
  name: String!
  type: String!
  longtitude: Int
  latitude: Int
  days: Int!
  cost: Int!
  rates: Int!
  transportation: String
  review: String
  photo_url: String
  createdAt: String!
  updatedAt: String!
  cityId: ID!
}
