type Query {
  """
  get user's travelList with cities
  """
  travelLists(cursor: String!, limit: Int!): TravelLists!
  """
  get all user's travelList with cites
  """
  travelListsAll(cursor: String!, limit: Int!): TravelLists!
}

type Mutation {
  """
  create or update travelList
  """
  travelListPost(
    id: ID
    name: String!
    tags: [String]
    types: String
    stayFrom: String!
    stayTo: String!
    transportation: String
    review: String
    countries: [String]
    permissions: String!
  ): TravelListPayload!
  """
  delete travelList
  """
  travelListDelete(id: ID!): Payload
}

type TravelListPayload {
  status: String!
  message: String
  travelList: TravelList!
}

type TravelLists {
  status: String!
  message: String
  travelLists: [TravelList!]!
}

type TravelList implements Node {
  id: ID!
  name: String!
  tags: [String]
  types: String
  stayFrom: String!
  stayTo: String!
  days: String
  costs: Int
  rates: Float
  likes: Int
  comments: Int
  transportation: String
  review: String
  countries: [String]
  permissions: String!
  createdAt: String!
  updatedAt: String!
  userId: ID!
  cities: [City]
}
