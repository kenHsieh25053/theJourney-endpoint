type Query {
  """
  get user's travelList
  """
  getTravelLists: TravelLists!
  """
  get all user's travelList
  """
  getAllTravelLists: TravelLists!
}

type Mutation {
  """
  create or update travelList
  """
  postTravelList (
    id: ID
    name: String!
    tags: [String]
    stayFrom: String!
    stayTo: String!
    cost: Int
    rates: Int
    likes: Int
    transportation: String
    review: String
  ): TravelListPayload!
  """
  delete travelList
  """
  deleteTravelList(id: ID!): Payload
}

type TravelListPayload {
  status: String!
  message: String
  travelList: Travellist!
}

type TravelLists {
  status: String!
  message: String
  travelList: [Travellist!]!
}

type Travellist implements Node {
  id: ID!
  name: String!
  tags: [String]
  stayFrom: String!
  stayTo: String!
  days: String
  cost: Int
  rates: Int
  likes: Int
  transportation: String
  review: String
  createdAt: String!
  updatedAt: String!
  userId: ID!
}
