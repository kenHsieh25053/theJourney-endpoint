type Query {
  """
  get user's travelList with cities
  """
  travelLists(cursor: String!, limit: Int!): TravelLists!
  """
  get all user's travelList with cites
  """
  travelListsAll(cursor: String!, limit: Int!): TravelLists!
}

type Mutation {
  """
  create or update travelList
  """
  travelListPost(input: TravelListPostInput!): TravelListPayload!
  """
  delete travelList
  """
  travelListDelete(id: ID!): TravelListPayload
}

input TravelListPostInput {
  id: ID
  name: String!
  types: String
  stayFrom: String!
  stayTo: String!
  review: String
  countries: [String]
  permissions: String!
  cities: [CityInput]
}

input CityInput {
  id: ID
  name: String!
  stayFrom: String!
  stayTo: String!
  costs: Int
  photo_url: String
  travelListId: ID
  touristSpots: [TouristSpotInput]
}

input TouristSpotInput {
  id: ID
  name: String!
  rates: Float!
  photo_url: String
  cityId: ID
}

type TravelListPayload {
  status: String!
  message: String
  travelLists: TravelList
}

type TravelList {
  id: ID
  name: String
  tags: [String]
  types: String
  stayFrom: String
  stayTo: String
  days: String
  costs: Int
  rates: Float
  likes: Int
  comments: Int
  transportation: String
  review: String
  countries: [String]
  permissions: String
  createdAt: String
  updatedAt: String
  userId: ID
  cities: [City]
}

type TravelLists {
  status: String!
  message: String
  travelLists: [TravelList!]!
}

scalar Upload
