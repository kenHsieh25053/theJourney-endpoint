type Query {
  """
  get all city
  """
  cities(travelListId: ID!): Cities!
}

type Mutation {
  """
  create or update city
  """
  cityPost(
    id: ID
    name: String!
    stayFrom: String!
    stayTo: String!
    transportation: String
    review: String
    travelListId: ID!
  ): CityPayload!
  """
  delete city
  """
  cityDelete(id: ID!): Payload
}

type CityPayload {
  status: String!
  message: String
  city: City!
}

type Cities {
  status: String!
  message: String
  cities: [City!]!
}

type City implements Node {
  id: ID!
  name: String!
  longtitude: Int
  latitude: Int
  stayFrom: String!
  stayTo: String!
  cost: Int
  rates: Int
  transportation: String
  review: String
  photo_url: String
  createdAt: String!
  updatedAt: String!
  travelListId: ID!
  # tourist_spots: [String!]!
  # country: String!
}
